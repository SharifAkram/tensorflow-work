# -*- coding: utf-8 -*-
"""00_tensorflow_fundamentals.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19Ya4sJJy5L8bCEze9MjjnfmgoT67iTwP
"""

# import tensorflow
import tensorflow as tf
print(tf.__version__)

# check the number of dimensions of a tensor (ndim = number of dimensions)
scalar.ndim

# create a vactor
vector = tf.constant([10, 10])
vector

# check the dimension of vector
vector.ndim

# create a matrix (has more than 1 dimension)
matrix = tf.constant([[10, 7], [7, 10]])
matrix

matrix.ndim

# create another matrix
another_matrix = tf.constant([[10., 7.],
                              [3., 2.],
                              [8., 9.]], dtype = tf.float16) # specify the data type with dtype parameter

another_matrix

another_matrix.ndim

# let's create a tensor
tensor = tf.constant([[[1, 2, 3],
                       [4, 5, 6]],
                       [[7, 8, 9],
                        [10, 11, 12]],
                       [[13, 14, 15],
                        [16, 17, 18]]])
tensor

tensor.ndim

# Scalar: single number
# Vector: a number with direction (ex: wind speed and direction)
# Matrix: a 2-dimensional array of numbers
# Tensor: an n-dimensional array of numbers (when n can be any number, a 0-dimensional tensor is a scalar, a 1-dimensional is a vector)

"""Creating tensors with tf.Variable"""

# Create the same tensor with tf.Variable() as above
changeable_tensor = tf.Variable([10, 7]) # values can change
unchangeable_tensor = tf.constant([10, 7]) # values cannot change
changeable_tensor, unchangeable_tensor

# Let's try change one of the elements in out changeable tensor
changeable_tensor[0] = 7
changeable_tensor

# How about we try .assign()
changeable_tensor[0].assign(7)
changeable_tensor

# Lets try change our unchangable tensor
unchangeable_tensor[0].assign(7)
unchangeable_tensor

"""Creating random tensors

Random tensors are tensors of some abitrary size which contain random numbers.
"""

# Create two random (but the same) tensors
random_1 = tf.random.Generator.from_seed(7) # set seed for reproducibility
random_1 = random_1.normal(shape=(3, 2))
random_2 = tf.random.Generator.from_seed(7)
random_2 = random_2.normal(shape=(3, 2))

# Are they equal
random_1, random_2, random_1 == random_2

# create tensors with tf.constant
scalar = tf.constant(7)
scalar

"""Shuffle the order of elements in a tensor"""

# Shuffle a tensor
# Valuable for when you want to shuffle our data
# so the inherent order does not affect learning
not_shuffled = tf.constant([[10,7],
                            [3, 4],
                            [2, 5]])
# shuffle our non-shuffled tensor
tf.random.shuffle(not_shuffled)

not_shuffled